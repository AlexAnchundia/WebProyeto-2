// <auto-generated />
using System;
using GestionClientes.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GestionClientes.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250727165641_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GestionClientes.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("CedulaPasaporte")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Correo")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Direccion")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("IdCliente");

                    b.HasIndex("CedulaPasaporte")
                        .IsUnique();

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("GestionClientes.Models.EvaluacionCliente", b =>
                {
                    b.Property<int>("IdEvaluacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdEvaluacion"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<string>("Comentarios")
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Puntaje")
                        .HasColumnType("integer");

                    b.HasKey("IdEvaluacion");

                    b.HasIndex("ClienteId");

                    b.ToTable("EvaluacionesCliente");
                });

            modelBuilder.Entity("GestionClientes.Models.HistorialAlquiler", b =>
                {
                    b.Property<int>("IdHistorial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdHistorial"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("TotalPagado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VehiculoId")
                        .HasColumnType("integer");

                    b.HasKey("IdHistorial");

                    b.HasIndex("ClienteId");

                    b.ToTable("HistorialAlquileres");
                });

            modelBuilder.Entity("GestionClientes.Models.LicenciaConduccion", b =>
                {
                    b.Property<int>("IdLicencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdLicencia"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("FechaEmision")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("PaisEmision")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("IdLicencia");

                    b.HasIndex("ClienteId");

                    b.ToTable("LicenciasConduccion");
                });

            modelBuilder.Entity("GestionClientes.Models.TarjetaPago", b =>
                {
                    b.Property<int>("IdTarjeta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTarjeta"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaExpiracion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NumeroTarjeta")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("IdTarjeta");

                    b.HasIndex("ClienteId");

                    b.ToTable("TarjetasPago");
                });

            modelBuilder.Entity("GestionClientes.Models.EvaluacionCliente", b =>
                {
                    b.HasOne("GestionClientes.Models.Cliente", "Cliente")
                        .WithMany("Evaluaciones")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("GestionClientes.Models.HistorialAlquiler", b =>
                {
                    b.HasOne("GestionClientes.Models.Cliente", "Cliente")
                        .WithMany("HistorialAlquileres")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("GestionClientes.Models.LicenciaConduccion", b =>
                {
                    b.HasOne("GestionClientes.Models.Cliente", "Cliente")
                        .WithMany("LicenciasConduccion")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("GestionClientes.Models.TarjetaPago", b =>
                {
                    b.HasOne("GestionClientes.Models.Cliente", "Cliente")
                        .WithMany("TarjetasPago")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("GestionClientes.Models.Cliente", b =>
                {
                    b.Navigation("Evaluaciones");

                    b.Navigation("HistorialAlquileres");

                    b.Navigation("LicenciasConduccion");

                    b.Navigation("TarjetasPago");
                });
#pragma warning restore 612, 618
        }
    }
}
